<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Sakuli - Testing and Monitoring-Tool for Websites and common UIs.
  ~
  ~ Copyright 2013 - 2014 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <aop:aspectj-autoproxy/>
    <context:annotation-config/>
    <context:component-scan base-package="de.consol.sakuli.aop"/>
    <context:component-scan base-package="de.consol.sakuli.utils"/>

    <bean id="de.consol.sakuli.datamodel.properties.SakuliProperties"
          class="de.consol.sakuli.datamodel.properties.SakuliProperties"/>
    <bean class="de.consol.sakuli.loader.BaseActionLoaderImpl"/>
    <bean id="propertyResolver"
          class="de.consol.sakuli.utils.SakuliPropertyPlaceholderConfigurer">
        <property name="fileEncoding" value="UTF-8"/>
        <property name="systemPropertiesMode" value="2"/>
        <property name="loadSakuliProperties" value="false"/>
        <property name="loadTestSuiteProperties" value="true"/>
        <property name="writePropertiesToSahiConfig" value="false"/>
        <property name="locations">
            <list>
                <!-- override the properties from the test-suite folder and so on-->
                <value>classpath:JUnit-sakuli.properties</value>
            </list>
        </property>
    </bean>

    <!-- Mocked Beans -->
    <bean id="de.consol.sakuli.datamodel.TestSuite" class="de.consol.sakuli.MockitoFactoryBean">
        <constructor-arg value="de.consol.sakuli.datamodel.TestSuite">
        </constructor-arg>
    </bean>
    <bean id="de.consol.sakuli.dao.DaoTestSuite " class="de.consol.sakuli.MockitoFactoryBean">
        <constructor-arg value="de.consol.sakuli.services.receiver.database.dao.DaoTestSuite ">
        </constructor-arg>
    </bean>
    <bean id="de.consol.sakuli.exceptions.SakuliExceptionHandler" class="de.consol.sakuli.MockitoFactoryBean">
        <constructor-arg value="de.consol.sakuli.exceptions.SakuliExceptionHandler">
        </constructor-arg>
    </bean>
    <bean id="de.consol.sakuli.actions.screenbased.ScreenshotActions" class="de.consol.sakuli.MockitoFactoryBean">
        <constructor-arg value="de.consol.sakuli.actions.screenbased.ScreenshotActions">
        </constructor-arg>
    </bean>
    <bean id="de.consol.sakuli.actions.environment.CipherUtil" class="de.consol.sakuli.MockitoFactoryBean">
        <constructor-arg value="de.consol.sakuli.actions.environment.CipherUtil">
        </constructor-arg>
    </bean>
    <bean id="de.consol.sakuli.datamodel.properties.SahiProxyProperties" class="de.consol.sakuli.MockitoFactoryBean">
        <constructor-arg value="de.consol.sakuli.datamodel.properties.SahiProxyProperties">
        </constructor-arg>
    </bean>
    <bean id="de.consol.sakuli.datamodel.properties.ReceiverProperties" class="de.consol.sakuli.MockitoFactoryBean">
        <constructor-arg value="de.consol.sakuli.datamodel.properties.ReceiverProperties">
        </constructor-arg>
    </bean>

    <bean id="de.consol.sakuli.loader.ScreenActionLoaderImpl" class="de.consol.sakuli.MockitoFactoryBean">
        <constructor-arg value="de.consol.sakuli.loader.ScreenActionLoaderImpl">
        </constructor-arg>
    </bean>

    <bean id="de.consol.sakuli.datamodel.properties.ActionProperties"
          class="de.consol.sakuli.datamodel.properties.ActionProperties"/>

    <bean class="de.consol.sakuli.actions.settings.ScreenBasedSettings">
        <constructor-arg index="0" ref="de.consol.sakuli.datamodel.properties.ActionProperties"/>
        <constructor-arg index="1" ref="de.consol.sakuli.datamodel.properties.SakuliProperties"/>
    </bean>

    <bean id="properties" class="de.consol.sakuli.PropertyHolder" depends-on="propertyResolver">
        <property name="testSuiteFolder" value="${sakuli.testsuite.folder}"/>
        <property name="logFile" value="${sakuli.log.folder}/_sakuli.log"/>
        <property name="logFileAll" value="${sakuli.log.folder}/all.log"/>
        <property name="screenShotFolder" value="${sakuli.screenshot.dir}"/>
    </bean>

</beans>
#
# Sakuli - Testing and Monitoring-Tool for Websites and common UIs.
#
# Copyright 2013 - 2014 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#######################################################################################
#######################################################################################
# SAKULI-PROPERTIES-FILE
#
# In the following file you can configure all of default settings. This settings will
# be valid for all test suites of these Sakuli installation. Each single property can
# be overridden in the property file 'testsuite.properties' in the single test suite
# folders.
#######################################################################################



#######################################################################################
# TEST-SUITE-BEHAVIOR-PROPERTIES
#
# Set here the common behavior settings for the test suite.
#######################################################################################

# Defines the browser in witch the test suite should be executed
# values are corresponding to the file
# <sahi-installtion-folder>/userdata/config/browser_types.xml
#
# DEFAULT: firefox
testsuite.browser=firefox




#######################################################################################
# SAKULI-ACTION-PROPERTIES
#
# Set here the common settings for the behavior of
# the sakuli actions during the execution.
#######################################################################################

# If true, the test suite takes screenshots when an error occurs during the execution.
#
# DEFAULT: true
sakuli.takeScreenShots.onErrors=true

### Controls the default automatic highlighting feature
# en-/disable
#
# DEFAULT: false
sakuli.autoHighlight.enabled=false

# time in seconds for highlighting (float)
#
# DEFAULT: 1.1f
sakuli.autoHighlight.seconds=1.1f

### Screenbased Action Delays
#
#set the default type and click delay in seconds;
sakuli.screenbased.typeDelay=0.05
sakuli.screenbased.clickDelay=0.2


### Encryption Interface Settings
# Defines the network interface for which should be used for the encryption functions.
sakuli.encryption.interface=eth0
# Enable the TEST-MODE for cipher encryption. You can also enable this, if you don't
# want to use the encryption feature.
#
# DEFAULT:false
sakuli.encryption.interface.testmode=false



#######################################################################################
# PERSISTENCE-PROPERTIES
#
# Defines the properties for the database connection. To initially build up the
# database see the file 'core/src/database_scripts/create_and_drop_database.sql'.
#######################################################################################

# Specifies the to JDBC-Driver
jdbc.driverClass=com.mysql.jdbc.Driver
# host for the JDBC database
jdbc.host=localhost
# JDBC-Database port:
jdbc.port=3306
# name of the database
jdbc.database=sahi
# database username
jdbc.user=sahi
# database password
jdbc.pw=sahi
# schema of database
jdbc.model=sahi
# pattern for JDBC database connection URL
jdbc.url=jdbc:mysql://${jdbc.host}:${jdbc.port}/${jdbc.database}




#######################################################################################
# SAHI-PROXY-PROPERTIES
#
# Defines the location and the behavior of the underlying used Sahi proxy.
#######################################################################################
# port of the sahi proxy
sahi.proxy.port=9999
# Path to your default Sahi installation
sahi.proxy.homePath=../sahi
#Path to the config folder of the default Sahi installation
sahi.proxy.configurationPath=${sahi.proxy.homePath}/userdata

#Specifies, how often the sahi proxy should try to connect
sahi.proxy.maxConnectTries=5
#Specifies, the wait time in seconds for the retry
sahi.proxy.reconnectSeconds=5




###############################
# LOGGING & ERROR-SCREENSHOT PROPERTIES
# Set here the common logging settings for sakuli.
# To configure more details see the file 'sakuli-log-config.xml'
###############################

# If you use the feature resumeOnException, for example with 'new Region("foo",true), then you can config
# the exception logging like following: If
#   true  = Exception will appear in the log and on the test suite result
#   false = Exception will NOT appear in the log file and in the test suite result. In that case you
#           have to handle it by yourself in the test case, like in this example:
#            try{
#              var foo = fooRegion.find("image.png");
#              if (foo == null){
#                  throw "your custom exception message";
#              }
#            } catch (e) {
#              handleYourSelf(e);
#            }
#
# DEFAULT: true
sakuli.log.exception.onResumeOnException=true

# Log pattern for the logging output.
#
# Log pattern for development with java classes:
# sakuli.log.pattern=%-5level %d{YYYY-MM-dd HH:mm:ss} [%thread]  %logger{36} - %msg%n
sakuli.log.pattern= %-5level [%d{YYYY-MM-dd HH:mm:ss}] - %msg%n

# Sets the output folder for the log files
sakuli.log.folder=${sakuli.testsuite.folder}/_logs

# Sets the output folder for the error screenshots (if activated)
sakuli.screenshot.dir=${sakuli.log.folder}/_screenshots
# Output format for the take screenshots.
# Possible values: jpg, png
sakuli.screenshot.format=jpg
#sakuli.screenshot.format=png

  # TODO TS add proxy settings to properties
### Specific Logging properties for the Sahi proxy
#
#log folder for sahi hmtl report
logs.dir=${sakuli.log.folder}
# Specify the handlers to create in the root logger
# (all loggers are children of the root logger)
handlers = java.util.logging.ConsoleHandler, java.util.logging.FileHandler

# Set the default logging level for new ConsoleHandler instances
java.util.logging.ConsoleHandler.level = ALL

# Set the default logging level for new FileHandler instances
java.util.logging.FileHandler.level = ALL

# Set the default formatter for new ConsoleHandler instances
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

java.util.logging.FileHandler.limit=102400
java.util.logging.FileHandler.count=10
java.util.logging.FileHandler.pattern=%t/sahi%g.log

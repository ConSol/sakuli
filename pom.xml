<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Sakuli - Testing and Monitoring-Tool for Websites and common UIs.
  ~
  ~ Copyright 2013 - 2015 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.sakuli</groupId>
    <artifactId>root</artifactId>
    <version>0.9.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>sakuli-parent</name>
    <description>Parent pom for the complete sakuli project.
        If you want to build a new zip-installer-file please run "mvn clean assembly:single",
        to build a new release see 'core/dev_stuff/how-to-release.md'
    </description>
    <url>http://maven.apache.org</url>

    <modules>
        <module>src/common</module>
        <module>src/core</module>
        <module>src/integration-test</module>
        <module>src/docs</module>
        <module>src/java-dsl</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <downloadSources>true</downloadSources>
        <downloadJavadocs>true</downloadJavadocs>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- needed for no errors on javadoc generation (maven-javadoc-plugin) -->
        <additionalparam>-Xdoclint:none</additionalparam>
        <dependencies.spring.version>4.1.4.RELEASE</dependencies.spring.version>
        <dependencies.aspectj.version>1.8.2</dependencies.aspectj.version>
        <dependencies.testng.version>6.8.8</dependencies.testng.version>
        <test.group.integration>integration</test.group.integration>
        <test.group.unit>unit</test.group.unit>
        <test.group.ui>ui</test.group.ui>
        <test.group.sakuliDSL>sakuli-test</test.group.sakuliDSL>
        <!-- special sakuli-version 99x - change this later to latest stable version-->
        <sikulixapi.version>1.1.992</sikulixapi.version>
        <sahi.version>5.0</sahi.version>
    </properties>

    <!-- Plugin CONFIG -->

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <!-- musst be include together with the aspectj plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <!-- Config for running all unit test separate from the integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                    <excludedGroups>${test.group.integration},${test.group.sakuliDSL}</excludedGroups>
                    <excludes>
                        <!-- exludes the package org.sakuli.integration-->
                        <exclude>**/integration/**/*</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <releaseProfiles>release-build,upload-release</releaseProfiles>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <!-- verifies that only the phases until install will be executed-->
                    <!--<goals>install</goals>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <configuration>
                    <!-- name for release branch -->
                    <branch>REL_${project.version}</branch>
                </configuration>
            </plugin>
        </plugins>
        <!-- plugin dependencies -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>aspectj-maven-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.17</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.6.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.9</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.17</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>0.0.22</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>wagon-maven-plugin</artifactId>
                    <version>1.0-beta-5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.3</version>
                </plugin>
            </plugins>

        </pluginManagement>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>2.3</version>
            </extension>
        </extensions>
    </build>

    <!-- ===========================================================  -->
    <!-- see jolokia sample - https://github.com/rhuss/jolokia/blob/master/pom.xml -->
    <scm>
        <connection>scm:git:git://github.com/ConSol/sakuli.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/ConSol/sakuli.git</developerConnection>
        <url>git://github.com/ConSol/sakuli.git</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/ConSol/sakuli/issues/</url>
    </issueManagement>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Tobias Schneck</name>
            <id>toschneck</id>
            <email>tobias.schneck@consol.de</email>
            <organization>ConSol</organization>
            <roles>
                <role>Developer, Architect</role>
            </roles>
        </developer>
        <developer>
            <name>Simon Meggle</name>
            <id>simonmeggle</id>
            <email>simon.meggle@consol.de</email>
            <organization>ConSol</organization>
            <roles>
                <role>Developer, Architect</role>
            </roles>
        </developer>
    </developers>


    <distributionManagement>
        <!-- local maven repository for normal builds -->
        <repository>
            <id>local-release</id>
            <url>file:///${user.home}/.m2/repository</url>
        </repository>
        <snapshotRepository>
            <id>local-snapshots</id>
            <url>file:///${user.home}/.m2/repository</url>
        </snapshotRepository>
    </distributionManagement>


    <profiles>
        <!-- profile for uploading the artifacts and zipped files to labs.consol.de/sakuli-->
        <profile>
            <id>upload-release</id>
            <!-- profile settings to upload the artifacts to the consol labs server -->
            <distributionManagement>
                <repository>
                    <id>labs-consol-sakuli-repository</id>
                    <url>scpexe://labs.consol.de/home/maven-repository/www/htdocs/repository</url>
                </repository>
                <snapshotRepository>
                    <id>labs-consol-sakuli-repository</id>
                    <url>scpexe://labs.consol.de/home/maven-repository/www/htdocs/snapshots-repository</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>

    <!-- general dependencies -->
    <dependencies>
        <!-- Testing frameworks -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
        </dependency>
        <!--Mockito -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Libraries -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${dependencies.spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${dependencies.spring.version}</version>
            </dependency>
            <!-- Spring JDBC-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${dependencies.spring.version}</version>
            </dependency>
            <!--Aspect libaries -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${dependencies.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${dependencies.aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${dependencies.aspectj.version}</version>
            </dependency>
            <!-- JavaConfig need this library -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjtools</artifactId>
                <version>${dependencies.aspectj.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--MySQL Driver for DB Access -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.25</version>
            </dependency>
            <!-- Derby Driver for embedded DB -->
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>10.10.1.1</version>
                <scope>test</scope>
            </dependency>

            <!-- LOGGING  over maven central -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.1.2</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>1.7.7</version>
                <scope>runtime</scope>
            </dependency>
            <!-- will rout the system out from sikulX to logging over slf4j -->
            <dependency>
                <groupId>uk.org.lidalia</groupId>
                <artifactId>sysout-over-slf4j</artifactId>
                <version>1.0.2</version>
            </dependency>

            <!-- Command line tool & some common libraries -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.9</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>1.10</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.4</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.3.2</version>
            </dependency>

            <!-- Sahi Library (OpenSource Version)-->
            <!-- local libaries, included with 'install_local_lib.sh' ... the are still not available over maven central -->
            <dependency>
                <groupId>net.sf.sahi</groupId>
                <artifactId>sahi</artifactId>
                <version>${sahi.version}</version>
            </dependency>

            <dependency>
                <groupId>net.sf.sahi</groupId>
                <artifactId>ant-sahi</artifactId>
                <version>${sahi.version}</version>
            </dependency>

            <!-- Sahi API Dependencies-->
            <dependency>
                <groupId>rhino</groupId>
                <artifactId>js</artifactId>
                <version>1.7R2</version>
            </dependency>

            <!-- SikuliX-Java Library (FULL LIBRARY) - is part of the  sikuli-setup.jar-->
            <!-- well be needed for Functions like App() and so on...-->
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixapi</artifactId>
                <version>${sikulixapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixlibslux</artifactId>
                <version>${sikulixapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixlibsmac</artifactId>
                <version>${sikulixapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixlibswin</artifactId>
                <version>${sikulixapi.version}</version>
            </dependency>

            <dependency>
                <groupId>org.gearman</groupId>
                <artifactId>gearman-java</artifactId>
                <version>0.6</version>
                <!-- exclude log4j to use sakuli logger -->
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Testing frameworks -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${dependencies.spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${dependencies.testng.version}</version>
                <scope>test</scope>
            </dependency>
            <!--Mockito -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.9.5</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>http://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <!-- ConSol Labs repository holds Sahi and SikuliX dependencies -->
        <repository>
            <id>labs-consol</id>
            <name>ConSol* Labs Repository</name>
            <url>http://labs.consol.de/maven/repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <!-- sonatype for gearman dependencies & sikuliX-2014 -->
        <repository>
            <id>sonatype</id>
            <url>https://oss.sonatype.org/content/groups/public</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
        </repository>
    </repositories>
</project>

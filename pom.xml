<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Sakuli - Testing and Monitoring-Tool for Websites and common UIs.
  ~
  ~ Copyright 2013 - 2015 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.sakuli</groupId>
    <artifactId>sakuli-root</artifactId>
    <version>1.1.0-SNAPSHOT-241_sakuli_se</version>
    <packaging>pom</packaging>

    <name>sakuli-parent</name>
    <description>Parent pom for the complete sakuli project.
        If you want to build a new zip-installer-file please run "mvn clean assembly:single",
        to build a new release see 'core/dev_stuff/how-to-release.md'
    </description>
    <url>http://maven.apache.org</url>

    <modules>
        <module>src/ocr-tessdata-extractor</module>
        <module>src/sakuli-common</module>
        <module>src/sakuli-core</module>
        <module>src/sakuli-sahi-setup</module>
        <module>src/sakuli-installer</module>
        <module>src/sakuli-java-dsl</module>
        <!--<module>src/sakuli-selenium-java-dsl</module>-->
        <module>src/integration-test</module>
        <module>src/docs</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
        <downloadSources>true</downloadSources>
        <downloadJavadocs>true</downloadJavadocs>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- needed for no errors on javadoc generation (maven-javadoc-plugin) -->
        <additionalparam>-Xdoclint:none</additionalparam>
        <dependencies.sakuli-go-wrapper.version>1.0.3</dependencies.sakuli-go-wrapper.version>
        <dependencies.spring.version>4.1.4.RELEASE</dependencies.spring.version>
        <dependencies.aspectj.version>1.8.2</dependencies.aspectj.version>
        <dependencies.testng.version>6.8.8</dependencies.testng.version>
        <dependencies.jersey-client.version>2.22.2</dependencies.jersey-client.version>
        <dependencies.slf4j.version>1.7.7</dependencies.slf4j.version>
        <test.group.integration>integration</test.group.integration>
        <test.group.unit>unit</test.group.unit>
        <test.group.ui>ui</test.group.ui>
        <test.group.sakuliDSL>sakuli-test</test.group.sakuliDSL>
        <!-- special sakuli-version 99x - change this later to latest stable version-->
        <sikulixapi.version>1.1.999</sikulixapi.version>
        <sahi.version>5.1</sahi.version>
        <izpack.version>5.0.6</izpack.version>
    </properties>

    <!-- Plugin CONFIG -->

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <plugin>
                <!-- musst be include together with the aspectj plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <!-- Config for running all unit test separate from the integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                    <excludedGroups>${test.group.integration},${test.group.sakuliDSL}</excludedGroups>
                    <excludes>
                        <!-- exludes the package org.sakuli.integration-->
                        <exclude>**/integration/**/*</exclude>
                    </excludes>
                    <environmentVariables>
                        <SAKULI_HOME />
                    </environmentVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>external.atlassian.jgitflow</groupId>
                <artifactId>jgitflow-maven-plugin</artifactId>
                <configuration>
                    <flowInitContext>
                        <!-- default git flow prefixes -->
                        <masterBranchName>master</masterBranchName>
                        <developBranchName>dev</developBranchName>
                        <featureBranchPrefix>feature/</featureBranchPrefix>
                        <releaseBranchPrefix>release/</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                        <!-- non default 'v' prefix -->
                        <versionTagPrefix>v</versionTagPrefix>
                    </flowInitContext>
                    <!--<defaultOriginUrl-->
                    <pushFeatures>true</pushFeatures>
                    <pushHotfixes>true</pushHotfixes>
                    <pushReleases>true</pushReleases>
                    <updateDependencies>true</updateDependencies>
                    <scmCommentPrefix>mvn-jgitflow:</scmCommentPrefix>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <enableSshAgent>true</enableSshAgent>
                    <useReleaseProfile>true</useReleaseProfile>
                    <!-- needs profile activation via:
                        <profile>
                        ...
                            <activation>
                                <property>
                                    <name>performRelease</name>
                                    <value>true</value>
                                </property>
                            </activation>
                        </profile>
                    -->
                </configuration>
            </plugin>

        </plugins>
        <!-- plugin dependencies -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>aspectj-maven-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.17</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.6.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.17</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>0.0.26</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>wagon-maven-plugin</artifactId>
                    <version>1.0-beta-5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.3</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.izpack</groupId>
                    <artifactId>izpack-maven-plugin</artifactId>
                    <version>${izpack.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>1.2.1</version>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>2.2.2</version>
                </plugin>

                <plugin>
                    <groupId>external.atlassian.jgitflow</groupId>
                    <artifactId>jgitflow-maven-plugin</artifactId>
                    <version>1.0-m5.1</version>
                </plugin>
            </plugins>

        </pluginManagement>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>2.3</version>
            </extension>
        </extensions>
    </build>

    <!-- ===========================================================  -->
    <!-- see jolokia sample - https://github.com/rhuss/jolokia/blob/master/pom.xml -->
    <scm>
        <connection>scm:git:git://github.com/ConSol/sakuli.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/ConSol/sakuli.git</developerConnection>
        <url>git://github.com/ConSol/sakuli.git</url>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/ConSol/sakuli/issues/</url>
    </issueManagement>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Tobias Schneck</name>
            <id>toschneck</id>
            <email>tobias.schneck@consol.de</email>
            <organization>ConSol</organization>
            <roles>
                <role>Developer, Architect</role>
            </roles>
        </developer>
        <developer>
            <name>Simon Meggle</name>
            <id>simonmeggle</id>
            <email>simon.meggle@consol.de</email>
            <organization>ConSol</organization>
            <roles>
                <role>Developer, Architect</role>
            </roles>
        </developer>
    </developers>


    <distributionManagement>
        <!-- local maven repository for normal builds -->
        <repository>
            <id>local-release</id>
            <url>file:///${user.home}/.m2/repository</url>
        </repository>
        <snapshotRepository>
            <id>local-snapshots</id>
            <url>file:///${user.home}/.m2/repository</url>
        </snapshotRepository>
    </distributionManagement>


    <profiles>
        <!-- profile overrideds the `upload-config` for releases-->
        <profile>
            <id>upload-release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <!-- profile settings to upload the artifacts to the consol labs server -->
            <distributionManagement>
                <repository>
                    <id>labs-consol-sakuli-repository</id>
                    <url>scpexe://labs.consol.de/home/maven-repository/www/htdocs/repository</url>
                </repository>
                <snapshotRepository>
                    <id>labs-consol-sakuli-repository</id>
                    <url>scpexe://labs.consol.de/home/maven-repository/www/htdocs/snapshots-repository</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
        <!-- profile for uploading the SNAPSHOT artifacts and zipped files to labs.consol.de/sakuli-->
        <profile>
            <id>upload</id>
            <!-- profile settings to upload the artifacts to the consol labs server -->
            <distributionManagement>
                <repository>
                    <id>labs-consol-sakuli-repository</id>
                    <!-- ensure that snapshot repository will used -->
                    <url>scpexe://labs.consol.de/home/maven-repository/www/htdocs/snapshots-repository</url>
                </repository>
                <snapshotRepository>
                    <id>labs-consol-sakuli-repository</id>
                    <url>scpexe://labs.consol.de/home/maven-repository/www/htdocs/snapshots-repository</url>
                </snapshotRepository>
            </distributionManagement>
        </profile>
    </profiles>

    <!-- general dependencies -->
    <dependencies>
        <!-- Testing frameworks -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
        </dependency>
        <!--Mockito -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Libraries -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${dependencies.spring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${dependencies.spring.version}</version>
            </dependency>
            <!-- Spring JDBC-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${dependencies.spring.version}</version>
            </dependency>
            <!--Aspect libaries -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${dependencies.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${dependencies.aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${dependencies.aspectj.version}</version>
            </dependency>
            <!-- JavaConfig need this library -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjtools</artifactId>
                <version>${dependencies.aspectj.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--MySQL Driver for DB Access -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.25</version>
            </dependency>
            <!-- Derby Driver for embedded DB -->
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>10.10.1.1</version>
                <scope>test</scope>
            </dependency>

            <!-- LOGGING  over maven central -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.1.2</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${dependencies.slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${dependencies.slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${dependencies.slf4j.version}</version>
            </dependency>

            <!-- will rout the system out from sikulX to logging over slf4j -->
            <dependency>
                <groupId>uk.org.lidalia</groupId>
                <artifactId>sysout-over-slf4j</artifactId>
                <version>1.0.2</version>
            </dependency>

            <!-- Command line tool & some common libraries -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.9</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>1.10</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.5</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.5</version>
            </dependency>

            <!-- Sahi Library (OpenSource Version)-->
            <!-- install libaries in labs repo, see `docs/development/maven-aspects.md` -->
            <dependency>
                <groupId>net.sf.sahi</groupId>
                <artifactId>sahi</artifactId>
                <version>${sahi.version}</version>
            </dependency>

            <dependency>
                <groupId>net.sf.sahi</groupId>
                <artifactId>ant-sahi</artifactId>
                <version>${sahi.version}</version>
            </dependency>

            <!-- Sahi API Dependencies-->
            <dependency>
                <groupId>org.mozilla</groupId>
                <artifactId>rhino</artifactId>
                <version>1.7.7.1</version>
            </dependency>

            <!-- SikuliX-Java Library (FULL LIBRARY) - is part of the  sikuli-setup.jar-->
            <!-- well be needed for Functions like App() and so on...-->
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixapi</artifactId>
                <version>${sikulixapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixlibslux</artifactId>
                <version>${sikulixapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixlibsmac</artifactId>
                <version>${sikulixapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sikulix</groupId>
                <artifactId>sikulixlibswin</artifactId>
                <version>${sikulixapi.version}</version>
            </dependency>

            <dependency>
                <groupId>org.gearman</groupId>
                <artifactId>gearman-java</artifactId>
                <version>0.6</version>
                <!-- exclude log4j to use sakuli logger -->
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- JAX-RS 2 client -->
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>2.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${dependencies.jersey-client.version}</version>
            </dependency>
            <!-- jackson json parser -->
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-json-jackson</artifactId>
                <version>${dependencies.jersey-client.version}</version>
            </dependency>

            <!-- Testing frameworks -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${dependencies.spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${dependencies.testng.version}</version>
                <scope>test</scope>
            </dependency>
            <!--Mockito -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>1.9.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jtwig</groupId>
                <artifactId>jtwig-core</artifactId>
                <version>5.64</version>
            </dependency>
            <dependency>
                <groupId>org.jtwig</groupId>
                <artifactId>jtwig-spaceless-extension</artifactId>
                <version>1.44</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <!-- ConSol Labs repository holds Sahi and SikuliX dependencies -->
        <repository>
            <id>labs-consol</id>
            <name>ConSol Labs Repository</name>
            <url>http://labs.consol.de/maven/repository</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>labs-consol-snapshot</id>
            <name>ConSol Labs Repository</name>
            <url>http://labs.consol.de/maven/snapshots-repository</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <!-- jtwig dependency-->
        <repository>
            <id>jcenter</id>
            <url>https://jcenter.bintray.com/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
        </repository>
    </repositories>
</project>

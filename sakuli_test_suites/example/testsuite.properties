#
# Sakuli - Testing and Monitoring-Tool for Websites and common UIs.
#
# Copyright 2013 - 2014 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#### suite/case information
# unique identifier for this suite
testsuite.id=sakuli_demo

# browser which will execute the test
# values are corresponding to the file SAKULI_HOME/sahi/userdata/config/browser_types.xml
# for GUI tests without any browser, use phantoms, because Sahi depends on a
# running browser instance
testsuite.browser=firefox

# description for this suite
testsuite.name=example test suite for Sakuli

# if true, screenshots will be captured if a testcase has errors
testsuite.takeScreenShots=true

#### highlighting feature
# en-/disable auto highlighting
testsuite.autoHighlight.enabled=true
# time in seconds for highlighting (float)
testsuite.autoHighlight.seconds=1.1f

#### thresholds
# (0 = threshold ignored)
# warning runtime threshold (seconds) for this suite
testsuite.warningTime=120
# critical runtime threshold (seconds) for this suite
testsuite.criticalTime=140

# If you use the feature resumeOnException, then you can handle the exception logging:
# true = Exception will appear in the log and on the test suite result
# false = Exception won't appear anywhere and you have to handle it in your testcase. For example:
#
# var foo = fooRegion.find("image.png");
# if (foo == null){
#      throw "your custom exception message";
# }
testsuite.resumeOnException.logException=true



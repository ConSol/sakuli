#
# Sakuli - Testing and Monitoring-Tool for Websites and common UIs.
#
# Copyright 2013 - 2014 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#testsuite_folder
test.suite.folder=src/test/resources/_testsuite4IT

#DISABLE the automatic loading of test cases for IT
saklui.load.testcases.automatic=false

#META-Data for the testsuite
#the guid is a systemwide unique id for the same testsuite, which is persistent over all executions
testsuite.id=testsuite4IT_001

# set the browser in witch this suite should be executed
# values are corresponding to the file <sahi-installtion-folder>/userdata/config/browser_types.xml
testsuite.browser=firefox

# Name for the current test suite
testsuite.name=integration test suite for Sakuli

# if true, ScreenShots will be captured if a testcase has errors
sakuli.takeScreenShots.onErrors=true

#### controlls the default automatic highlighting feature
# en-/disable
sakuli.autoHighlight.enabled=false
# time in scecounds for highlighting (float)
sakuli.autoHighlight.seconds=1.1f

# warning runtime threshold (seconds) for the whole test suite
# if the threshold is 0, the runtime measurement will be deactivated
testsuite.warningTime=120
#critical runtime threshold (seconds) for the whole test suite
#if the threshold is 0, the runtime measurement will be deactivated
testsuite.criticalTime=140

# If you use the feature resumeOnException, then you can handle the exception logging:
# true = Exception will apear in the log and on the test suite result
# false = Exception won't appear anywhere and you have to handle it in your testcase. For example:
#
# var foo = fooRegion.find("image.png");
# if (foo == null){
#      throw "your custom exception message";
# }
testsuite.resumeOnException.logException=true



#Configure the screenshots
sakuli.screenshot.dir=${log.folder}/_screenshots
sakuli.screenshot.format=jpg
#sakuli.screenshot.format=png

#enable the TEST-MODE for cipher encryption ethernet interface
sakuli.encryption.interface.testmode=true

#set the default type and click delay for the screenbased functions;
sakuli.screenbased.typeDelay=0.05
sakuli.screenbased.clickDelay=0.2
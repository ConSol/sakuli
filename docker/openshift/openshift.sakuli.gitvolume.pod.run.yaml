apiVersion: v1
kind: Template
labels:
  template: sakuli-e2e-run-pod-gitvol
metadata:
  annotations:
    description: Sakuli End-2-End testing client template (run as pod with mounted gitvolumen for the test suite)
    iconClass: icon-beaker
    tags: consol, sakuli, ubuntu, xfce
    version: 1.1.0-SNAPSHOT
  creationTimestamp: null
  name: sakuli-e2e-run-pod-gitvol
### template parameter defined via `oc process -f this.yaml -v PARAMETER=value`
parameters:
- description: The name for the E2E test suite.
  name: E2E_TEST_NAME
  required: true
  value: sakuli-ubuntu-xfce-example
- description: 'Custom hostname for http service route.  Leave blank for default hostname, e.g.: <E2E_TEST_NAME-name>-<project>.<default-domain-suffix>'
  name: HOSTNAME_HTTP
- description: 'Sakuli End-2-End image, see `docker search sakuli`'
  name: IMAGE
  required: true
#  TODO TS: remove tag after finishing
  value: consol/sakuli-ubuntu-xfce:v1.1.0-SNAPSHOT-218_docker_usermod_openshift
- description: Git repository where the Sakuli test suite is stored
  name: GIT_TEST_SUITE_REPO
  value: https://github.com/ConSol/sakuli-examples
- description: Git revision which sould be used for git checkout of the Sakuli test suite. For example to use a branch `development` or any git hash `7f00938bc89d3b95707e5458a49beaef99b0ab7e`.
  name: GIT_TEST_SUITE_REVISION
  value: master
- description: Path to the Sakuli test suite is stored at the GIT_TEST_SUITE_REPO
  name: GIT_TEST_SUITE_PATH
  value: docker-xfce/part_01/example_xfce
  # TODO TS: change to openshift example
### Configuration of OpenShift objects
objects:
### POD config (run one time)
- apiVersion: v1
  kind: Pod
  metadata:
    labels:
      application: ${E2E_TEST_NAME}
    name: ${E2E_TEST_NAME}-pod
  spec:
    ### ensure that the pod won't start again
    restartPolicy: Never
    dnsPolicy: ClusterFirst
    terminationGracePeriodSeconds: 5
    containers:
    - name: ${E2E_TEST_NAME}-pod-c1
      image: ${IMAGE}
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /headless/sakuli/testsuite
        name: vol-testsuite
      ## TODO TS check if there is a more convenient variant
      args:
#        - '--tail-log' #make normal UI startup to connect via: oc rsh <pod-name> bash
        - run
        - /headless/sakuli/testsuite/${GIT_TEST_SUITE_PATH}
        - -D
        # must be a writable path
        - sakuli.log.folder= /headless/sakuli/logs
        - -D
        # not needed in openshift envrionment
        - sakuli.forwarder.gearman.cache.enabled=false
#        - '-browser'
#        - 'chrome'
#        - '-D'
#        - 'log.level.sakuli=DEBUG'
#        - '-D'
#        - 'log.level.sahi=DEBUG'
      ### checks that vnc server is up and running
      livenessProbe:
        tcpSocket:
          port: 5901
        initialDelaySeconds: 1
        timeoutSeconds: 1
      ### checks if http-vnc connection is working
      readinessProbe:
        httpGet:
          path: /
          port: 6901
          scheme: HTTP
        initialDelaySeconds: 1
        timeoutSeconds: 1
    volumes:
    - name: vol-testsuite
      gitRepo:
        repository: ${GIT_TEST_SUITE_REPO}
        revision: ${GIT_TEST_SUITE_REVISION}
        directory: .
### Service -> POD config
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Sakuli client vnc and http port
    labels:
      application: ${E2E_TEST_NAME}
    name: ${E2E_TEST_NAME}-service
  spec:
    ports:
    - name: http-port-tcp
      protocol: TCP
      port: 6901
      targetPort: 6901
    - name: vnc-port-tcp
      protocol: TCP
      port: 5901
      targetPort: 5901
    selector:
      application: ${E2E_TEST_NAME}
### Route -> Service config
- apiVersion: v1
  id: ${E2E_TEST_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for vnc's http service.
    labels:
      application: ${E2E_TEST_NAME}
    name: ${E2E_TEST_NAME}-http
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${E2E_TEST_NAME}-service
    port:
      targetPort: http-port-tcp
      